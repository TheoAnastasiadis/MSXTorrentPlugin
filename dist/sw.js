self.addEventListener("activate",(e=>self.clients.claim())),self.addEventListener("fetch",(e=>{const{request:t}=e,{url:s,method:n,headers:o}=t;if(!s.includes(self.registration.scope+"webtorrent/"))return null;e.respondWith(clients.matchAll({type:"window",includeUncontrolled:!0}).then((function(e){return new Promise((t=>{for(const r of e){const e=new MessageChannel,{port1:a,port2:l}=e;a.onmessage=s=>{t([s.data,e])},r.postMessage({url:s,method:n,headers:[...o],scope:self.registration.scope},[l])}}))})).then((([e,t])=>{const s="stream"===e.body?new ReadableStream({pull:e=>new Promise((s=>{t.port1.onmessage=t=>{t.data?e.enqueue(t.data):e.close(),s()},t.port1.postMessage(!0)})),cancel(){t.port1.postMessage(!1)}}):e.body;return new Response(s,e)})).catch(console.error))}));